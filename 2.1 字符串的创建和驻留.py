#字符串的驻留机制
a='python'
b="python"
c="""python"""

#下面三个内存地址都是一样。因为票易通是不可变字符序列。不同的值被存放在字符串的驻留池中，
# Python的驻留机制对相同的字符串只保留一份拷贝。后续创建的想通过字符串，不会开辟新空间。而是把字符串的地址赋值给新的变量
print(a,id(a))  # python 22875872
print(b,id(b)) # python 22875872
print(c,id(c)) # python 22875872

#驻留机制的几种情况（交互模式）
    #1字符串的长度为0或1时
    #2 符合标识符的字符串
    #3 字符串只在编译的时候进行驻留，而非运行时
    #4 [-5，256] 之间的整数数字
#sys 中的intern方法强制2个字符串指向同一个对象
#pycharm对字符串进行了优化处理

a='abc'
b='ab'+'c'
c=".".join(["ab","c"])
print(a is b) #True   字符串只在编译的时候进行驻留，而非运行时
print(a is c) #False  字符串只在编译的时候进行驻留，而非运行时
print(id(a)) #26674656
print(id(b)) #26674656
print(id(c)) #28505344

a=-5
b=-5
print(a is b)#true [-5，256] 之间的整数数字

a2=-6
b2=-6
print(a2 is b2) #true [-5，256] 之间的整数数字 ,但是为啥-6还是发生驻留的情况， 因为pycharm干的

#驻留机制的好处
# 1. 当需要相同的字符串的时候，可以直接从字符串池子中拿来用。避免频繁的创建和销毁，提升效率和节约内存，因此拼接字符串和修改字符串是比较影响性能的。
# 2. 在需要字符串进行拼接的时候，建议使用str类型的join方法，而不是+，因为join() 方法会先算出所有字符串中的长度，然后再拷贝，只需要new 一次对象，效率要比+高



